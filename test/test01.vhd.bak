LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY lab_03 IS
PORT( Clock         :IN STD_LOGIC ; 
      Load_A,Start:IN STD_LOGIC ; 
      reset_n       :IN STD_LOGIC ;
      A            :IN STD_LOGIC_VECTOR (7 DOWNTO 0) ;
      B            :OUT STD_LOGIC_VECTOR (3 DOWNTO 0) ;
      Done         :OUT STD_LOGIC) ; 
END lab_03; 

ARCHITECTURE Behavior OF lab_03 IS 
SIGNAL STATE      :STD_LOGIC_VECTOR (1 DOWNTO 0); 
SIGNAL A_bit      :STD_LOGIC_VECTOR (7 DOWNTO 0); 
SIGNAL B_bit      :STD_LOGIC_VECTOR (3 DOWNTO 0); 
SIGNAL z,RA,CB      :STD_LOGIC; -- z:make done 1, RA:start read A, CB:start count b->b+1

BEGIN 
State_Transitions: 
   PROCESS (Clock, reset_n) 
   BEGIN 
      IF reset_n='0' THEN
         STATE<="00";
      ELSIF (Clock'EVENT AND Clock='1') THEN 
         CASE STATE IS
            WHEN "00"=> 
               if Load_A= '0' then 
                  STATE<= "00"; 
               else 
                  STATE<= "01"; 
               end if; 
            WHEN "01"=> 
               if Start= '0' then 
                  STATE<= "01"; 
               else 
                  STATE<= "10"; 
               end if; 
            WHEN "10"=>
               if z= '0' then 
                  STATE<= "10"; 
               else 
                  STATE<= "11"; 
               end if;
            WHEN "11"=> 
               if Start= '1' then 
                  STATE<= "11"; 
               else 
                  STATE<= "00"; 
               end if;
         END CASE; 
      END IF; 
   END PROCESS State_Transitions; 

Control_Outputs: 
   PROCESS (STATE,Start,A_bit(0)) 
   BEGIN 
      Done<='0'; 
      IF STATE="00" THEN 
         RA<='0'; 
         CB<='0'; 
            
      ELSIF STATE="10" THEN
         RA<='1'; --start read bit
         IF A_bit(0)='1' THEN 
            CB<='1';
         ELSE
            CB<='0'; 
         END IF; 
      ELSIF STATE="11" THEN 
         RA<= '0'; 
         CB<= '0'; 
         Done<='1'; 
      END IF; 
   END PROCESS Control_Outputs; 
      
Datapath: 
   PROCESS (Clock) 
   BEGIN 
      IF (Clock'EVENT AND Clock='1') THEN 
         IF STATE="00" THEN 
            B_bit<="0000"; 
         ELSE 
            if CB= '1'                --if bit is one
               then B_bit<=B_bit+1; --count
            end if; 
         END IF; 
      END IF; 
   END PROCESS Datapath; 
   
ShiftA: 
   PROCESS(Clock,A,Load_A,Start,Clock) --Load_A->onebit
   BEGIN 
      IF (Clock'EVENT AND Clock='1') THEN 
         IF (Load_A='1') THEN
         A_bit<=A; 
         ELSE 
            IF EA='1' THEN 
               A_bit<='0'&A_bit(7 DOWNTO 1); 
               IF A_bit="00000000" THEN 
                  z<='1'; --make done:1
               ELSE 
                  z<='0'; --still repeat
               END IF; 
            END IF; 
         END IF; 
      END IF; 
   END PROCESS ShiftA;
   
B<=B_bit;       --Output
END Behavior;      --Finish